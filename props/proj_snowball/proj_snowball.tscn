[gd_scene load_steps=7 format=2]

[ext_resource path="res://good_props/proj_snowball/proj_snowball_0.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF.001'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node1_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node1_out0_color;
	float node1_out1_alpha;
	
	node1_in0_vector = vec3(UV, 0.0);
	node_tex_image(node1_in0_vector, texture_0, node1_out0_color, node1_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node2_in0_basecolor = node1_out0_color;
	float node2_in1_subsurface = float(0.0);
	vec3 node2_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node2_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node2_in4_metallic = float(0.0);
	float node2_in5_specular = float(0.5);
	float node2_in6_speculartint = float(0.0);
	float node2_in7_roughness = float(0.5);
	float node2_in8_anisotropic = float(0.0);
	float node2_in9_anisotropicrotation = float(0.0);
	float node2_in10_sheen = float(0.0);
	float node2_in11_sheentint = float(0.5);
	float node2_in12_clearcoat = float(0.0);
	float node2_in13_clearcoatroughness = float(0.029999999329447746);
	float node2_in14_ior = float(1.4500000476837158);
	float node2_in15_transmission = float(0.0);
	float node2_in16_transmissionroughness = float(0.0);
	vec4 node2_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node2_in18_alpha = float(1.0);
	vec3 node2_in19_normal = NORMAL;
	vec3 node2_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node2_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node2_bsdf_out0_albedo;
	float node2_bsdf_out1_sss_strength;
	float node2_bsdf_out3_specular;
	float node2_bsdf_out2_metallic;
	float node2_bsdf_out4_roughness;
	float node2_bsdf_out5_clearcoat;
	float node2_bsdf_out6_clearcoat_gloss;
	float node2_bsdf_out7_anisotropy;
	float node2_bsdf_out8_transmission;
	float node2_bsdf_out9_ior;
	
	node_bsdf_principled(node2_in0_basecolor, node2_in1_subsurface,
		node2_in3_subsurfacecolor, node2_in4_metallic, node2_in5_specular,
		node2_in7_roughness, node2_in12_clearcoat, node2_in13_clearcoatroughness,
		node2_in8_anisotropic, node2_in15_transmission, node2_in14_ior,
		node2_bsdf_out0_albedo, node2_bsdf_out1_sss_strength, node2_bsdf_out2_metallic,
		node2_bsdf_out3_specular, node2_bsdf_out4_roughness, node2_bsdf_out5_clearcoat,
		node2_bsdf_out6_clearcoat_gloss, node2_bsdf_out7_anisotropy,
		node2_bsdf_out8_transmission, node2_bsdf_out9_ior);
	
	
	ALBEDO = node2_bsdf_out0_albedo;
	SSS_STRENGTH = node2_bsdf_out1_sss_strength;
	SPECULAR = node2_bsdf_out3_specular;
	METALLIC = node2_bsdf_out2_metallic;
	ROUGHNESS = node2_bsdf_out4_roughness;
	CLEARCOAT = node2_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node2_bsdf_out6_clearcoat_gloss;
	NORMAL = node2_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node2_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node2_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node2_bsdf_out7_anisotropy;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/texture_0 = ExtResource( 1 )

[sub_resource type="ArrayMesh" id=3]
resource_name = "proj_snowball"
blend_shape_mode = 0
blend_shape/names = PoolStringArray( "base", "melt1", "melt2", "melt3", "melt4", "melt5", "melt6" )
blend_shape/mode = 0
surfaces/0 = {
"aabb": AABB( -8.09017, -3.8471, -8.09017, 16.1803, 7.69423, 16.1803 ),
"array_data": PoolByteArray( 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 182, 102, 0, 0, 1, 0, 130, 129, 64, 57, 0, 47, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 182, 102, 0, 0, 1, 0, 130, 129, 234, 58, 0, 47, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 182, 102, 0, 0, 1, 0, 130, 129, 21, 58, 192, 54, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 74, 102, 0, 0, 1, 0, 130, 127, 0, 49, 0, 47, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 74, 102, 0, 0, 1, 0, 130, 127, 42, 52, 192, 54, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 74, 102, 0, 0, 1, 0, 130, 127, 213, 53, 0, 47, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 79, 30, 94, 0, 97, 1, 175, 127, 0, 49, 0, 47, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 79, 30, 94, 0, 97, 1, 175, 127, 0, 46, 224, 56, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 79, 30, 94, 0, 97, 1, 175, 127, 42, 52, 192, 54, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 80, 29, 163, 0, 161, 255, 173, 127, 213, 54, 224, 56, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 80, 29, 163, 0, 161, 255, 173, 127, 213, 53, 0, 47, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 80, 29, 163, 0, 161, 255, 173, 127, 42, 52, 192, 54, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 94, 226, 177, 0, 175, 255, 159, 127, 42, 52, 192, 54, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 94, 226, 177, 0, 175, 255, 159, 127, 42, 52, 96, 59, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 94, 226, 177, 0, 175, 255, 159, 127, 213, 54, 224, 56, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 93, 227, 80, 0, 83, 1, 161, 127, 0, 46, 224, 56, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 93, 227, 80, 0, 83, 1, 161, 127, 42, 52, 96, 59, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 93, 227, 80, 0, 83, 1, 161, 127, 42, 52, 192, 54, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 176, 29, 93, 0, 161, 1, 173, 129, 64, 57, 0, 47, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 176, 29, 93, 0, 161, 1, 173, 129, 21, 58, 192, 54, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 176, 29, 93, 0, 161, 1, 173, 129, 192, 56, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 162, 226, 79, 0, 175, 1, 159, 129, 21, 58, 96, 59, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 162, 226, 79, 0, 175, 1, 159, 129, 192, 56, 224, 56, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 162, 226, 79, 0, 175, 1, 159, 129, 21, 58, 192, 54, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 163, 227, 176, 0, 83, 255, 161, 129, 21, 58, 192, 54, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 163, 227, 176, 0, 83, 255, 161, 129, 106, 59, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 163, 227, 176, 0, 83, 255, 161, 129, 21, 58, 96, 59, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 177, 30, 162, 0, 97, 255, 175, 129, 234, 58, 0, 47, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 177, 30, 162, 0, 97, 255, 175, 129, 106, 59, 224, 56, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 177, 30, 162, 0, 97, 255, 175, 129, 21, 58, 192, 54, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 0, 154, 182, 0, 127, 0, 0, 129, 42, 52, 96, 59, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 0, 154, 182, 0, 127, 0, 0, 129, 213, 54, 224, 56, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 0, 154, 182, 0, 127, 0, 0, 129, 42, 52, 96, 59, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 0, 154, 74, 0, 127, 0, 0, 129, 21, 58, 96, 59, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 0, 154, 74, 0, 127, 0, 0, 129, 192, 56, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 0, 154, 74, 0, 127, 0, 0, 129, 21, 58, 96, 59 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 3, 0, 5, 0, 4, 0, 6, 0, 8, 0, 7, 0, 9, 0, 11, 0, 10, 0, 12, 0, 14, 0, 13, 0, 15, 0, 17, 0, 16, 0, 18, 0, 20, 0, 19, 0, 21, 0, 23, 0, 22, 0, 24, 0, 26, 0, 25, 0, 27, 0, 29, 0, 28, 0, 30, 0, 32, 0, 31, 0, 33, 0, 35, 0, 34, 0 ),
"blend_shape_data": [ PoolByteArray( 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 182, 102, 0, 0, 1, 0, 130, 129, 64, 57, 0, 47, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 182, 102, 0, 0, 1, 0, 130, 129, 234, 58, 0, 47, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 182, 102, 0, 0, 1, 0, 130, 129, 21, 58, 192, 54, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 74, 102, 0, 0, 1, 0, 130, 127, 0, 49, 0, 47, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 74, 102, 0, 0, 1, 0, 130, 127, 42, 52, 192, 54, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 74, 102, 0, 0, 1, 0, 130, 127, 213, 53, 0, 47, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 79, 30, 94, 0, 97, 1, 175, 127, 0, 49, 0, 47, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 79, 30, 94, 0, 97, 1, 175, 127, 0, 46, 224, 56, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 79, 30, 94, 0, 97, 1, 175, 127, 42, 52, 192, 54, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 80, 29, 163, 0, 161, 255, 173, 127, 213, 54, 224, 56, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 80, 29, 163, 0, 161, 255, 173, 127, 213, 53, 0, 47, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 80, 29, 163, 0, 161, 255, 173, 127, 42, 52, 192, 54, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 94, 226, 177, 0, 175, 255, 159, 127, 42, 52, 192, 54, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 94, 226, 177, 0, 175, 255, 159, 127, 42, 52, 96, 59, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 94, 226, 177, 0, 175, 255, 159, 127, 213, 54, 224, 56, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 93, 227, 80, 0, 83, 1, 161, 127, 0, 46, 224, 56, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 93, 227, 80, 0, 83, 1, 161, 127, 42, 52, 96, 59, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 93, 227, 80, 0, 83, 1, 161, 127, 42, 52, 192, 54, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 176, 29, 93, 0, 161, 1, 173, 129, 64, 57, 0, 47, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 176, 29, 93, 0, 161, 1, 173, 129, 21, 58, 192, 54, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 176, 29, 93, 0, 161, 1, 173, 129, 192, 56, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 162, 226, 79, 0, 175, 1, 159, 129, 21, 58, 96, 59, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 162, 226, 79, 0, 175, 1, 159, 129, 192, 56, 224, 56, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 162, 226, 79, 0, 175, 1, 159, 129, 21, 58, 192, 54, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 163, 227, 176, 0, 83, 255, 161, 129, 21, 58, 192, 54, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 163, 227, 176, 0, 83, 255, 161, 129, 106, 59, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 163, 227, 176, 0, 83, 255, 161, 129, 21, 58, 96, 59, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 177, 30, 162, 0, 97, 255, 175, 129, 234, 58, 0, 47, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 177, 30, 162, 0, 97, 255, 175, 129, 106, 59, 224, 56, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 177, 30, 162, 0, 97, 255, 175, 129, 21, 58, 192, 54, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 0, 154, 182, 0, 127, 0, 0, 129, 42, 52, 96, 59, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 0, 154, 182, 0, 127, 0, 0, 129, 213, 54, 224, 56, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 0, 154, 182, 0, 127, 0, 0, 129, 42, 52, 96, 59, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 0, 154, 74, 0, 127, 0, 0, 129, 21, 58, 96, 59, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 0, 154, 74, 0, 127, 0, 0, 129, 192, 56, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 0, 154, 74, 0, 127, 0, 0, 129, 21, 58, 96, 59 ), PoolByteArray( 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 182, 102, 0, 0, 1, 0, 130, 129, 64, 57, 0, 47, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 182, 102, 0, 0, 1, 0, 130, 129, 234, 58, 0, 47, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 182, 102, 0, 0, 1, 0, 130, 129, 21, 58, 192, 54, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 74, 102, 0, 0, 1, 0, 130, 127, 0, 49, 0, 47, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 74, 102, 0, 0, 1, 0, 130, 127, 42, 52, 192, 54, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 74, 102, 0, 0, 1, 0, 130, 127, 213, 53, 0, 47, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 79, 30, 94, 0, 97, 1, 175, 127, 0, 49, 0, 47, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 79, 30, 94, 0, 97, 1, 175, 127, 0, 46, 224, 56, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 79, 30, 94, 0, 97, 1, 175, 127, 42, 52, 192, 54, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 80, 29, 163, 0, 161, 255, 173, 127, 213, 54, 224, 56, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 80, 29, 163, 0, 161, 255, 173, 127, 213, 53, 0, 47, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 80, 29, 163, 0, 161, 255, 173, 127, 42, 52, 192, 54, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 94, 226, 177, 0, 175, 255, 159, 127, 42, 52, 192, 54, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 94, 226, 177, 0, 175, 255, 159, 127, 42, 52, 96, 59, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 94, 226, 177, 0, 175, 255, 159, 127, 213, 54, 224, 56, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 93, 227, 80, 0, 83, 1, 161, 127, 0, 46, 224, 56, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 93, 227, 80, 0, 83, 1, 161, 127, 42, 52, 96, 59, 95, 239, 128, 64, 150, 152, 107, 63, 2, 245, 1, 61, 93, 227, 80, 0, 83, 1, 161, 127, 42, 52, 192, 54, 2, 245, 1, 189, 55, 55, 118, 64, 94, 104, 32, 64, 176, 29, 93, 0, 161, 1, 173, 129, 64, 57, 0, 47, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 176, 29, 93, 0, 161, 1, 173, 129, 21, 58, 192, 54, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 176, 29, 93, 0, 161, 1, 173, 129, 192, 56, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 162, 226, 79, 0, 175, 1, 159, 129, 21, 58, 96, 59, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 162, 226, 79, 0, 175, 1, 159, 129, 192, 56, 224, 56, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 162, 226, 79, 0, 175, 1, 159, 129, 21, 58, 192, 54, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 163, 227, 176, 0, 83, 255, 161, 129, 21, 58, 192, 54, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 163, 227, 176, 0, 83, 255, 161, 129, 106, 59, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 163, 227, 176, 0, 83, 255, 161, 129, 21, 58, 96, 59, 248, 241, 1, 61, 55, 55, 118, 64, 52, 104, 32, 192, 177, 30, 162, 0, 97, 255, 175, 129, 234, 58, 0, 47, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 177, 30, 162, 0, 97, 255, 175, 129, 106, 59, 224, 56, 95, 239, 128, 192, 150, 152, 107, 63, 248, 241, 1, 189, 177, 30, 162, 0, 97, 255, 175, 129, 21, 58, 192, 54, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 0, 154, 182, 0, 127, 0, 0, 129, 42, 52, 96, 59, 248, 241, 1, 61, 120, 151, 107, 191, 95, 239, 128, 192, 0, 154, 182, 0, 127, 0, 0, 129, 213, 54, 224, 56, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 0, 154, 182, 0, 127, 0, 0, 129, 42, 52, 96, 59, 52, 104, 32, 64, 227, 54, 118, 192, 2, 245, 1, 61, 0, 154, 74, 0, 127, 0, 0, 129, 21, 58, 96, 59, 2, 245, 1, 189, 120, 151, 107, 191, 95, 239, 128, 64, 0, 154, 74, 0, 127, 0, 0, 129, 192, 56, 224, 56, 94, 104, 32, 192, 227, 54, 118, 192, 248, 241, 1, 189, 0, 154, 74, 0, 127, 0, 0, 129, 21, 58, 96, 59 ), PoolByteArray( 2, 245, 1, 189, 226, 204, 73, 64, 54, 229, 64, 64, 200, 113, 0, 0, 1, 0, 130, 129, 64, 57, 0, 47, 248, 241, 1, 61, 226, 204, 73, 64, 12, 229, 64, 192, 200, 113, 0, 0, 1, 0, 130, 129, 234, 58, 0, 47, 202, 84, 155, 192, 242, 63, 61, 63, 248, 241, 1, 189, 200, 113, 0, 0, 1, 0, 130, 129, 21, 58, 192, 54, 2, 245, 1, 189, 226, 204, 73, 64, 54, 229, 64, 64, 56, 113, 0, 0, 1, 0, 130, 127, 0, 49, 0, 47, 202, 84, 155, 64, 242, 63, 61, 63, 2, 245, 1, 61, 56, 113, 0, 0, 1, 0, 130, 127, 42, 52, 192, 54, 248, 241, 1, 61, 226, 204, 73, 64, 12, 229, 64, 192, 56, 113, 0, 0, 1, 0, 130, 127, 213, 53, 0, 47, 2, 245, 1, 189, 226, 204, 73, 64, 54, 229, 64, 64, 77, 43, 91, 0, 96, 0, 174, 127, 0, 49, 0, 47, 2, 245, 1, 189, 213, 62, 61, 191, 202, 84, 155, 64, 77, 43, 91, 0, 96, 0, 174, 127, 0, 46, 224, 56, 202, 84, 155, 64, 242, 63, 61, 63, 2, 245, 1, 61, 77, 43, 91, 0, 96, 0, 174, 127, 42, 52, 192, 54, 248, 241, 1, 61, 213, 62, 61, 191, 202, 84, 155, 192, 78, 42, 166, 0, 161, 0, 173, 127, 213, 54, 224, 56, 248, 241, 1, 61, 226, 204, 73, 64, 12, 229, 64, 192, 78, 42, 166, 0, 161, 0, 173, 127, 213, 53, 0, 47, 202, 84, 155, 64, 242, 63, 61, 63, 2, 245, 1, 61, 78, 42, 166, 0, 161, 0, 173, 127, 42, 52, 192, 54, 202, 84, 155, 64, 242, 63, 61, 63, 2, 245, 1, 61, 91, 213, 179, 0, 174, 0, 160, 127, 42, 52, 192, 54, 12, 229, 64, 64, 142, 204, 73, 192, 2, 245, 1, 61, 91, 213, 179, 0, 174, 0, 160, 127, 42, 52, 96, 59, 248, 241, 1, 61, 213, 62, 61, 191, 202, 84, 155, 192, 91, 213, 179, 0, 174, 0, 160, 127, 213, 54, 224, 56, 2, 245, 1, 189, 213, 62, 61, 191, 202, 84, 155, 64, 90, 214, 78, 0, 83, 0, 161, 127, 0, 46, 224, 56, 12, 229, 64, 64, 142, 204, 73, 192, 2, 245, 1, 61, 90, 214, 78, 0, 83, 0, 161, 127, 42, 52, 96, 59, 202, 84, 155, 64, 242, 63, 61, 63, 2, 245, 1, 61, 90, 214, 78, 0, 83, 0, 161, 127, 42, 52, 192, 54, 2, 245, 1, 189, 226, 204, 73, 64, 54, 229, 64, 64, 178, 42, 90, 0, 161, 0, 173, 129, 64, 57, 0, 47, 202, 84, 155, 192, 242, 63, 61, 63, 248, 241, 1, 189, 178, 42, 90, 0, 161, 0, 173, 129, 21, 58, 192, 54, 2, 245, 1, 189, 213, 62, 61, 191, 202, 84, 155, 64, 178, 42, 90, 0, 161, 0, 173, 129, 192, 56, 224, 56, 54, 229, 64, 192, 142, 204, 73, 192, 248, 241, 1, 189, 165, 213, 77, 0, 174, 0, 160, 129, 21, 58, 96, 59, 2, 245, 1, 189, 213, 62, 61, 191, 202, 84, 155, 64, 165, 213, 77, 0, 174, 0, 160, 129, 192, 56, 224, 56, 202, 84, 155, 192, 242, 63, 61, 63, 248, 241, 1, 189, 165, 213, 77, 0, 174, 0, 160, 129, 21, 58, 192, 54, 202, 84, 155, 192, 242, 63, 61, 63, 248, 241, 1, 189, 166, 214, 178, 0, 83, 0, 161, 129, 21, 58, 192, 54, 248, 241, 1, 61, 213, 62, 61, 191, 202, 84, 155, 192, 166, 214, 178, 0, 83, 0, 161, 129, 106, 59, 224, 56, 54, 229, 64, 192, 142, 204, 73, 192, 248, 241, 1, 189, 166, 214, 178, 0, 83, 0, 161, 129, 21, 58, 96, 59, 248, 241, 1, 61, 226, 204, 73, 64, 12, 229, 64, 192, 179, 43, 165, 0, 96, 0, 174, 129, 234, 58, 0, 47, 248, 241, 1, 61, 213, 62, 61, 191, 202, 84, 155, 192, 179, 43, 165, 0, 96, 0, 174, 129, 106, 59, 224, 56, 202, 84, 155, 192, 242, 63, 61, 63, 248, 241, 1, 189, 179, 43, 165, 0, 96, 0, 174, 129, 21, 58, 192, 54, 54, 229, 64, 192, 142, 204, 73, 192, 248, 241, 1, 189, 0, 143, 200, 0, 127, 0, 0, 129, 42, 52, 96, 59, 248, 241, 1, 61, 213, 62, 61, 191, 202, 84, 155, 192, 0, 143, 200, 0, 127, 0, 0, 129, 213, 54, 224, 56, 12, 229, 64, 64, 142, 204, 73, 192, 2, 245, 1, 61, 0, 143, 200, 0, 127, 0, 0, 129, 42, 52, 96, 59, 12, 229, 64, 64, 142, 204, 73, 192, 2, 245, 1, 61, 0, 143, 56, 0, 127, 0, 0, 129, 21, 58, 96, 59, 2, 245, 1, 189, 213, 62, 61, 191, 202, 84, 155, 64, 0, 143, 56, 0, 127, 0, 0, 129, 192, 56, 224, 56, 54, 229, 64, 192, 142, 204, 73, 192, 248, 241, 1, 189, 0, 143, 56, 0, 127, 0, 0, 129, 21, 58, 96, 59 ), PoolByteArray( 2, 245, 1, 189, 141, 98, 29, 64, 229, 97, 97, 64, 217, 120, 0, 0, 1, 0, 130, 129, 64, 57, 0, 47, 248, 241, 1, 61, 141, 98, 29, 64, 229, 97, 97, 192, 217, 120, 0, 0, 1, 0, 130, 129, 234, 58, 0, 47, 52, 186, 181, 192, 186, 160, 22, 63, 248, 241, 1, 189, 217, 120, 0, 0, 1, 0, 130, 129, 21, 58, 192, 54, 2, 245, 1, 189, 141, 98, 29, 64, 229, 97, 97, 64, 39, 120, 0, 0, 1, 0, 130, 127, 0, 49, 0, 47, 52, 186, 181, 64, 186, 160, 22, 63, 2, 245, 1, 61, 39, 120, 0, 0, 1, 0, 130, 127, 42, 52, 192, 54, 248, 241, 1, 61, 141, 98, 29, 64, 229, 97, 97, 192, 39, 120, 0, 0, 1, 0, 130, 127, 213, 53, 0, 47, 2, 245, 1, 189, 141, 98, 29, 64, 229, 97, 97, 64, 71, 60, 85, 0, 96, 0, 174, 127, 0, 49, 0, 47, 2, 245, 1, 189, 157, 159, 22, 191, 52, 186, 181, 64, 71, 60, 85, 0, 96, 0, 174, 127, 0, 46, 224, 56, 52, 186, 181, 64, 186, 160, 22, 63, 2, 245, 1, 61, 71, 60, 85, 0, 96, 0, 174, 127, 42, 52, 192, 54, 248, 241, 1, 61, 157, 159, 22, 191, 52, 186, 181, 192, 73, 59, 172, 0, 161, 0, 173, 127, 213, 54, 224, 56, 248, 241, 1, 61, 141, 98, 29, 64, 229, 97, 97, 192, 73, 59, 172, 0, 161, 0, 173, 127, 213, 53, 0, 47, 52, 186, 181, 64, 186, 160, 22, 63, 2, 245, 1, 61, 73, 59, 172, 0, 161, 0, 173, 127, 42, 52, 192, 54, 52, 186, 181, 64, 186, 160, 22, 63, 2, 245, 1, 61, 85, 196, 185, 0, 174, 0, 160, 127, 42, 52, 192, 54, 229, 97, 97, 64, 57, 98, 29, 192, 2, 245, 1, 61, 85, 196, 185, 0, 174, 0, 160, 127, 42, 52, 96, 59, 248, 241, 1, 61, 157, 159, 22, 191, 52, 186, 181, 192, 85, 196, 185, 0, 174, 0, 160, 127, 213, 54, 224, 56, 2, 245, 1, 189, 157, 159, 22, 191, 52, 186, 181, 64, 84, 197, 73, 0, 83, 0, 161, 127, 0, 46, 224, 56, 229, 97, 97, 64, 57, 98, 29, 192, 2, 245, 1, 61, 84, 197, 73, 0, 83, 0, 161, 127, 42, 52, 96, 59, 52, 186, 181, 64, 186, 160, 22, 63, 2, 245, 1, 61, 84, 197, 73, 0, 83, 0, 161, 127, 42, 52, 192, 54, 2, 245, 1, 189, 141, 98, 29, 64, 229, 97, 97, 64, 183, 59, 84, 0, 161, 0, 173, 129, 64, 57, 0, 47, 52, 186, 181, 192, 186, 160, 22, 63, 248, 241, 1, 189, 183, 59, 84, 0, 161, 0, 173, 129, 21, 58, 192, 54, 2, 245, 1, 189, 157, 159, 22, 191, 52, 186, 181, 64, 183, 59, 84, 0, 161, 0, 173, 129, 192, 56, 224, 56, 229, 97, 97, 192, 57, 98, 29, 192, 248, 241, 1, 189, 171, 196, 71, 0, 174, 0, 160, 129, 21, 58, 96, 59, 2, 245, 1, 189, 157, 159, 22, 191, 52, 186, 181, 64, 171, 196, 71, 0, 174, 0, 160, 129, 192, 56, 224, 56, 52, 186, 181, 192, 186, 160, 22, 63, 248, 241, 1, 189, 171, 196, 71, 0, 174, 0, 160, 129, 21, 58, 192, 54, 52, 186, 181, 192, 186, 160, 22, 63, 248, 241, 1, 189, 172, 197, 183, 0, 83, 0, 161, 129, 21, 58, 192, 54, 248, 241, 1, 61, 157, 159, 22, 191, 52, 186, 181, 192, 172, 197, 183, 0, 83, 0, 161, 129, 106, 59, 224, 56, 229, 97, 97, 192, 57, 98, 29, 192, 248, 241, 1, 189, 172, 197, 183, 0, 83, 0, 161, 129, 21, 58, 96, 59, 248, 241, 1, 61, 141, 98, 29, 64, 229, 97, 97, 192, 185, 60, 171, 0, 96, 0, 174, 129, 234, 58, 0, 47, 248, 241, 1, 61, 157, 159, 22, 191, 52, 186, 181, 192, 185, 60, 171, 0, 96, 0, 174, 129, 106, 59, 224, 56, 52, 186, 181, 192, 186, 160, 22, 63, 248, 241, 1, 189, 185, 60, 171, 0, 96, 0, 174, 129, 21, 58, 192, 54, 229, 97, 97, 192, 57, 98, 29, 192, 248, 241, 1, 189, 0, 136, 217, 0, 127, 0, 0, 129, 42, 52, 96, 59, 248, 241, 1, 61, 157, 159, 22, 191, 52, 186, 181, 192, 0, 136, 217, 0, 127, 0, 0, 129, 213, 54, 224, 56, 229, 97, 97, 64, 57, 98, 29, 192, 2, 245, 1, 61, 0, 136, 217, 0, 127, 0, 0, 129, 42, 52, 96, 59, 229, 97, 97, 64, 57, 98, 29, 192, 2, 245, 1, 61, 0, 136, 39, 0, 127, 0, 0, 129, 21, 58, 96, 59, 2, 245, 1, 189, 157, 159, 22, 191, 52, 186, 181, 64, 0, 136, 39, 0, 127, 0, 0, 129, 192, 56, 224, 56, 229, 97, 97, 192, 57, 98, 29, 192, 248, 241, 1, 189, 0, 136, 39, 0, 127, 0, 0, 129, 21, 58, 96, 59 ), PoolByteArray( 2, 245, 1, 189, 111, 240, 225, 63, 95, 239, 128, 64, 231, 124, 0, 0, 0, 0, 130, 129, 64, 57, 0, 47, 248, 241, 1, 61, 111, 240, 225, 63, 95, 239, 128, 192, 231, 124, 0, 0, 0, 0, 130, 129, 234, 58, 0, 47, 159, 31, 208, 192, 12, 144, 208, 62, 248, 241, 1, 189, 231, 124, 0, 0, 0, 0, 130, 129, 21, 58, 192, 54, 2, 245, 1, 189, 111, 240, 225, 63, 95, 239, 128, 64, 25, 124, 0, 0, 0, 0, 130, 127, 0, 49, 0, 47, 159, 31, 208, 64, 12, 144, 208, 62, 2, 245, 1, 61, 25, 124, 0, 0, 0, 0, 130, 127, 42, 52, 192, 54, 248, 241, 1, 61, 111, 240, 225, 63, 95, 239, 128, 192, 25, 124, 0, 0, 0, 0, 130, 127, 213, 53, 0, 47, 2, 245, 1, 189, 111, 240, 225, 63, 95, 239, 128, 64, 62, 83, 73, 0, 96, 0, 174, 127, 0, 49, 0, 47, 2, 245, 1, 189, 210, 141, 208, 190, 159, 31, 208, 64, 62, 83, 73, 0, 96, 0, 174, 127, 0, 46, 224, 56, 159, 31, 208, 64, 12, 144, 208, 62, 2, 245, 1, 61, 62, 83, 73, 0, 96, 0, 174, 127, 42, 52, 192, 54, 248, 241, 1, 61, 210, 141, 208, 190, 159, 31, 208, 192, 63, 82, 184, 0, 161, 0, 173, 127, 213, 54, 224, 56, 248, 241, 1, 61, 111, 240, 225, 63, 95, 239, 128, 192, 63, 82, 184, 0, 161, 0, 173, 127, 213, 53, 0, 47, 159, 31, 208, 64, 12, 144, 208, 62, 2, 245, 1, 61, 63, 82, 184, 0, 161, 0, 173, 127, 42, 52, 192, 54, 159, 31, 208, 64, 12, 144, 208, 62, 2, 245, 1, 61, 73, 173, 194, 0, 174, 0, 160, 127, 42, 52, 192, 54, 95, 239, 128, 64, 28, 240, 225, 191, 2, 245, 1, 61, 73, 173, 194, 0, 174, 0, 160, 127, 42, 52, 96, 59, 248, 241, 1, 61, 210, 141, 208, 190, 159, 31, 208, 192, 73, 173, 194, 0, 174, 0, 160, 127, 213, 54, 224, 56, 2, 245, 1, 189, 210, 141, 208, 190, 159, 31, 208, 64, 72, 174, 63, 0, 83, 0, 161, 127, 0, 46, 224, 56, 95, 239, 128, 64, 28, 240, 225, 191, 2, 245, 1, 61, 72, 174, 63, 0, 83, 0, 161, 127, 42, 52, 96, 59, 159, 31, 208, 64, 12, 144, 208, 62, 2, 245, 1, 61, 72, 174, 63, 0, 83, 0, 161, 127, 42, 52, 192, 54, 2, 245, 1, 189, 111, 240, 225, 63, 95, 239, 128, 64, 193, 82, 72, 0, 161, 0, 173, 129, 64, 57, 0, 47, 159, 31, 208, 192, 12, 144, 208, 62, 248, 241, 1, 189, 193, 82, 72, 0, 161, 0, 173, 129, 21, 58, 192, 54, 2, 245, 1, 189, 210, 141, 208, 190, 159, 31, 208, 64, 193, 82, 72, 0, 161, 0, 173, 129, 192, 56, 224, 56, 95, 239, 128, 192, 28, 240, 225, 191, 248, 241, 1, 189, 183, 173, 62, 0, 174, 0, 160, 129, 21, 58, 96, 59, 2, 245, 1, 189, 210, 141, 208, 190, 159, 31, 208, 64, 183, 173, 62, 0, 174, 0, 160, 129, 192, 56, 224, 56, 159, 31, 208, 192, 12, 144, 208, 62, 248, 241, 1, 189, 183, 173, 62, 0, 174, 0, 160, 129, 21, 58, 192, 54, 159, 31, 208, 192, 12, 144, 208, 62, 248, 241, 1, 189, 184, 174, 193, 0, 83, 0, 161, 129, 21, 58, 192, 54, 248, 241, 1, 61, 210, 141, 208, 190, 159, 31, 208, 192, 184, 174, 193, 0, 83, 0, 161, 129, 106, 59, 224, 56, 95, 239, 128, 192, 28, 240, 225, 191, 248, 241, 1, 189, 184, 174, 193, 0, 83, 0, 161, 129, 21, 58, 96, 59, 248, 241, 1, 61, 111, 240, 225, 63, 95, 239, 128, 192, 194, 83, 183, 0, 96, 0, 174, 129, 234, 58, 0, 47, 248, 241, 1, 61, 210, 141, 208, 190, 159, 31, 208, 192, 194, 83, 183, 0, 96, 0, 174, 129, 106, 59, 224, 56, 159, 31, 208, 192, 12, 144, 208, 62, 248, 241, 1, 189, 194, 83, 183, 0, 96, 0, 174, 129, 21, 58, 192, 54, 95, 239, 128, 192, 28, 240, 225, 191, 248, 241, 1, 189, 0, 132, 231, 0, 127, 0, 0, 129, 42, 52, 96, 59, 248, 241, 1, 61, 210, 141, 208, 190, 159, 31, 208, 192, 0, 132, 231, 0, 127, 0, 0, 129, 213, 54, 224, 56, 95, 239, 128, 64, 28, 240, 225, 191, 2, 245, 1, 61, 0, 132, 231, 0, 127, 0, 0, 129, 42, 52, 96, 59, 95, 239, 128, 64, 28, 240, 225, 191, 2, 245, 1, 61, 0, 132, 25, 0, 127, 0, 0, 129, 21, 58, 96, 59, 2, 245, 1, 189, 210, 141, 208, 190, 159, 31, 208, 64, 0, 132, 25, 0, 127, 0, 0, 129, 192, 56, 224, 56, 95, 239, 128, 192, 28, 240, 225, 191, 248, 241, 1, 189, 0, 132, 25, 0, 127, 0, 0, 129, 21, 58, 96, 59 ), PoolByteArray( 2, 245, 1, 189, 197, 27, 137, 63, 3, 38, 143, 64, 242, 126, 0, 0, 0, 0, 130, 129, 64, 57, 0, 47, 248, 241, 1, 61, 197, 27, 137, 63, 3, 38, 143, 192, 242, 126, 0, 0, 0, 0, 130, 129, 234, 58, 0, 47, 65, 125, 232, 192, 156, 81, 131, 62, 248, 241, 1, 189, 242, 126, 0, 0, 0, 0, 130, 129, 21, 58, 192, 54, 2, 245, 1, 189, 197, 27, 137, 63, 3, 38, 143, 64, 14, 126, 0, 0, 0, 0, 130, 127, 0, 49, 0, 47, 65, 125, 232, 64, 156, 81, 131, 62, 2, 245, 1, 61, 14, 126, 0, 0, 0, 0, 130, 127, 42, 52, 192, 54, 248, 241, 1, 61, 197, 27, 137, 63, 3, 38, 143, 192, 14, 126, 0, 0, 0, 0, 130, 127, 213, 53, 0, 47, 2, 245, 1, 189, 197, 27, 137, 63, 3, 38, 143, 64, 43, 107, 51, 0, 96, 0, 174, 127, 0, 49, 0, 47, 2, 245, 1, 189, 97, 79, 131, 190, 65, 125, 232, 64, 43, 107, 51, 0, 96, 0, 174, 127, 0, 46, 224, 56, 65, 125, 232, 64, 156, 81, 131, 62, 2, 245, 1, 61, 43, 107, 51, 0, 96, 0, 174, 127, 42, 52, 192, 54, 248, 241, 1, 61, 97, 79, 131, 190, 65, 125, 232, 192, 43, 107, 205, 0, 160, 0, 173, 127, 213, 54, 224, 56, 248, 241, 1, 61, 197, 27, 137, 63, 3, 38, 143, 192, 43, 107, 205, 0, 160, 0, 173, 127, 213, 53, 0, 47, 65, 125, 232, 64, 156, 81, 131, 62, 2, 245, 1, 61, 43, 107, 205, 0, 160, 0, 173, 127, 42, 52, 192, 54, 65, 125, 232, 64, 156, 81, 131, 62, 2, 245, 1, 61, 51, 149, 213, 0, 174, 0, 160, 127, 42, 52, 192, 54, 3, 38, 143, 64, 113, 27, 137, 191, 2, 245, 1, 61, 51, 149, 213, 0, 174, 0, 160, 127, 42, 52, 96, 59, 248, 241, 1, 61, 97, 79, 131, 190, 65, 125, 232, 192, 51, 149, 213, 0, 174, 0, 160, 127, 213, 54, 224, 56, 2, 245, 1, 189, 97, 79, 131, 190, 65, 125, 232, 64, 51, 149, 43, 0, 83, 0, 160, 127, 0, 46, 224, 56, 3, 38, 143, 64, 113, 27, 137, 191, 2, 245, 1, 61, 51, 149, 43, 0, 83, 0, 160, 127, 42, 52, 96, 59, 65, 125, 232, 64, 156, 81, 131, 62, 2, 245, 1, 61, 51, 149, 43, 0, 83, 0, 160, 127, 42, 52, 192, 54, 2, 245, 1, 189, 197, 27, 137, 63, 3, 38, 143, 64, 213, 107, 51, 0, 160, 0, 173, 129, 64, 57, 0, 47, 65, 125, 232, 192, 156, 81, 131, 62, 248, 241, 1, 189, 213, 107, 51, 0, 160, 0, 173, 129, 21, 58, 192, 54, 2, 245, 1, 189, 97, 79, 131, 190, 65, 125, 232, 64, 213, 107, 51, 0, 160, 0, 173, 129, 192, 56, 224, 56, 3, 38, 143, 192, 113, 27, 137, 191, 248, 241, 1, 189, 205, 149, 43, 0, 174, 0, 160, 129, 21, 58, 96, 59, 2, 245, 1, 189, 97, 79, 131, 190, 65, 125, 232, 64, 205, 149, 43, 0, 174, 0, 160, 129, 192, 56, 224, 56, 65, 125, 232, 192, 156, 81, 131, 62, 248, 241, 1, 189, 205, 149, 43, 0, 174, 0, 160, 129, 21, 58, 192, 54, 65, 125, 232, 192, 156, 81, 131, 62, 248, 241, 1, 189, 205, 149, 213, 0, 83, 0, 160, 129, 21, 58, 192, 54, 248, 241, 1, 61, 97, 79, 131, 190, 65, 125, 232, 192, 205, 149, 213, 0, 83, 0, 160, 129, 106, 59, 224, 56, 3, 38, 143, 192, 113, 27, 137, 191, 248, 241, 1, 189, 205, 149, 213, 0, 83, 0, 160, 129, 21, 58, 96, 59, 248, 241, 1, 61, 197, 27, 137, 63, 3, 38, 143, 192, 213, 107, 205, 0, 96, 0, 174, 129, 234, 58, 0, 47, 248, 241, 1, 61, 97, 79, 131, 190, 65, 125, 232, 192, 213, 107, 205, 0, 96, 0, 174, 129, 106, 59, 224, 56, 65, 125, 232, 192, 156, 81, 131, 62, 248, 241, 1, 189, 213, 107, 205, 0, 96, 0, 174, 129, 21, 58, 192, 54, 3, 38, 143, 192, 113, 27, 137, 191, 248, 241, 1, 189, 0, 130, 242, 0, 127, 0, 0, 129, 42, 52, 96, 59, 248, 241, 1, 61, 97, 79, 131, 190, 65, 125, 232, 192, 0, 130, 242, 0, 127, 0, 0, 129, 213, 54, 224, 56, 3, 38, 143, 64, 113, 27, 137, 191, 2, 245, 1, 61, 0, 130, 242, 0, 127, 0, 0, 129, 42, 52, 96, 59, 3, 38, 143, 64, 113, 27, 137, 191, 2, 245, 1, 61, 0, 130, 14, 0, 127, 0, 0, 129, 21, 58, 96, 59, 2, 245, 1, 189, 97, 79, 131, 190, 65, 125, 232, 64, 0, 130, 14, 0, 127, 0, 0, 129, 192, 56, 224, 56, 3, 38, 143, 192, 113, 27, 137, 191, 248, 241, 1, 189, 0, 130, 14, 0, 127, 0, 0, 129, 21, 58, 96, 59 ), PoolByteArray( 2, 245, 1, 189, 54, 29, 193, 62, 111, 100, 159, 64, 252, 126, 0, 0, 0, 0, 130, 129, 64, 57, 0, 47, 248, 241, 1, 61, 54, 29, 193, 62, 90, 100, 159, 192, 252, 126, 0, 0, 0, 0, 130, 129, 234, 58, 0, 47, 86, 113, 1, 193, 173, 76, 216, 61, 248, 241, 1, 189, 252, 126, 0, 0, 0, 0, 130, 129, 21, 58, 192, 54, 2, 245, 1, 189, 54, 29, 193, 62, 111, 100, 159, 64, 4, 126, 0, 0, 0, 0, 130, 127, 0, 49, 0, 47, 86, 113, 1, 65, 173, 76, 216, 61, 2, 245, 1, 61, 4, 126, 0, 0, 0, 0, 130, 127, 42, 52, 192, 54, 248, 241, 1, 61, 54, 29, 193, 62, 90, 100, 159, 192, 4, 126, 0, 0, 0, 0, 130, 127, 213, 53, 0, 47, 2, 245, 1, 189, 54, 29, 193, 62, 111, 100, 159, 64, 15, 124, 19, 0, 96, 0, 174, 127, 0, 49, 0, 47, 2, 245, 1, 189, 196, 67, 216, 189, 86, 113, 1, 65, 15, 124, 19, 0, 96, 0, 174, 127, 0, 46, 224, 56, 86, 113, 1, 65, 173, 76, 216, 61, 2, 245, 1, 61, 15, 124, 19, 0, 96, 0, 174, 127, 42, 52, 192, 54, 248, 241, 1, 61, 196, 67, 216, 189, 86, 113, 1, 193, 16, 124, 237, 0, 160, 0, 174, 127, 213, 54, 224, 56, 248, 241, 1, 61, 54, 29, 193, 62, 90, 100, 159, 192, 16, 124, 237, 0, 160, 0, 174, 127, 213, 53, 0, 47, 86, 113, 1, 65, 173, 76, 216, 61, 2, 245, 1, 61, 16, 124, 237, 0, 160, 0, 174, 127, 42, 52, 192, 54, 86, 113, 1, 65, 173, 76, 216, 61, 2, 245, 1, 61, 19, 132, 241, 0, 174, 0, 160, 127, 42, 52, 192, 54, 90, 100, 159, 64, 252, 26, 193, 190, 2, 245, 1, 61, 19, 132, 241, 0, 174, 0, 160, 127, 42, 52, 96, 59, 248, 241, 1, 61, 196, 67, 216, 189, 86, 113, 1, 193, 19, 132, 241, 0, 174, 0, 160, 127, 213, 54, 224, 56, 2, 245, 1, 189, 196, 67, 216, 189, 86, 113, 1, 65, 19, 132, 16, 0, 82, 0, 160, 127, 0, 46, 224, 56, 90, 100, 159, 64, 252, 26, 193, 190, 2, 245, 1, 61, 19, 132, 16, 0, 82, 0, 160, 127, 42, 52, 96, 59, 86, 113, 1, 65, 173, 76, 216, 61, 2, 245, 1, 61, 19, 132, 16, 0, 82, 0, 160, 127, 42, 52, 192, 54, 2, 245, 1, 189, 54, 29, 193, 62, 111, 100, 159, 64, 240, 124, 19, 0, 160, 0, 174, 129, 64, 57, 0, 47, 86, 113, 1, 193, 173, 76, 216, 61, 248, 241, 1, 189, 240, 124, 19, 0, 160, 0, 174, 129, 21, 58, 192, 54, 2, 245, 1, 189, 196, 67, 216, 189, 86, 113, 1, 65, 240, 124, 19, 0, 160, 0, 174, 129, 192, 56, 224, 56, 111, 100, 159, 192, 252, 26, 193, 190, 248, 241, 1, 189, 237, 132, 15, 0, 174, 0, 160, 129, 21, 58, 96, 59, 2, 245, 1, 189, 196, 67, 216, 189, 86, 113, 1, 65, 237, 132, 15, 0, 174, 0, 160, 129, 192, 56, 224, 56, 86, 113, 1, 193, 173, 76, 216, 61, 248, 241, 1, 189, 237, 132, 15, 0, 174, 0, 160, 129, 21, 58, 192, 54, 86, 113, 1, 193, 173, 76, 216, 61, 248, 241, 1, 189, 237, 132, 240, 0, 82, 0, 160, 129, 21, 58, 192, 54, 248, 241, 1, 61, 196, 67, 216, 189, 86, 113, 1, 193, 237, 132, 240, 0, 82, 0, 160, 129, 106, 59, 224, 56, 111, 100, 159, 192, 252, 26, 193, 190, 248, 241, 1, 189, 237, 132, 240, 0, 82, 0, 160, 129, 21, 58, 96, 59, 248, 241, 1, 61, 54, 29, 193, 62, 90, 100, 159, 192, 241, 124, 237, 0, 96, 0, 174, 129, 234, 58, 0, 47, 248, 241, 1, 61, 196, 67, 216, 189, 86, 113, 1, 193, 241, 124, 237, 0, 96, 0, 174, 129, 106, 59, 224, 56, 86, 113, 1, 193, 173, 76, 216, 61, 248, 241, 1, 189, 241, 124, 237, 0, 96, 0, 174, 129, 21, 58, 192, 54, 111, 100, 159, 192, 252, 26, 193, 190, 248, 241, 1, 189, 0, 130, 252, 0, 127, 0, 0, 129, 42, 52, 96, 59, 248, 241, 1, 61, 196, 67, 216, 189, 86, 113, 1, 193, 0, 130, 252, 0, 127, 0, 0, 129, 213, 54, 224, 56, 90, 100, 159, 64, 252, 26, 193, 190, 2, 245, 1, 61, 0, 130, 252, 0, 127, 0, 0, 129, 42, 52, 96, 59, 90, 100, 159, 64, 252, 26, 193, 190, 2, 245, 1, 61, 0, 130, 4, 0, 127, 0, 0, 129, 21, 58, 96, 59, 2, 245, 1, 189, 196, 67, 216, 189, 86, 113, 1, 65, 0, 130, 4, 0, 127, 0, 0, 129, 192, 56, 224, 56, 111, 100, 159, 192, 252, 26, 193, 190, 248, 241, 1, 189, 0, 130, 4, 0, 127, 0, 0, 129, 21, 58, 96, 59 ) ],
"format": 97559,
"index_count": 36,
"material": SubResource( 2 ),
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 36
}

[sub_resource type="Animation" id=4]
resource_name = "proj_snowballAction"
length = 0.291667
tracks/0/type = "value"
tracks/0/path = NodePath(".:blend_shapes/base")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.0416667, 0.291667 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:blend_shapes/melt1")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.0416667, 0.0833333, 0.125, 0.166667, 0.291667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:blend_shapes/melt2")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.0416667, 0.0833333, 0.125, 0.166667, 0.208333, 0.291667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:blend_shapes/melt3")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.0416667, 0.125, 0.166667, 0.208333, 0.25, 0.291667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:blend_shapes/melt4")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.0416667, 0.166667, 0.208333, 0.25, 0.291667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:blend_shapes/melt5")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.0416667, 0.208333, 0.25, 0.291667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 0.0, 1.0, 0.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:blend_shapes/melt6")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.0416667, 0.25, 0.291667 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 0.0, 1.0 ]
}

[sub_resource type="ConvexPolygonShape" id=5]
points = PoolVector3Array( -3.88433, 1.02182, -0.12091, -3.86741, 0.654992, -0.120383, -3.82424, 1.00586, 0.11904, -3.81526, 0.646029, 0.11876, -3.72667, 0.891869, 0.240213, -3.39544, 1.38424, 0.363102, -2.45656, -3.7566, -0.122342, -2.42347, -3.70614, 0.120694, -2.05778, -3.33889, -0.725733, -1.93436, -3.21474, 0.846166, -1.20959, 2.9541, -1.57232, -0.725134, -3.57742, 0.362117, -0.605312, -1.6437, 3.02597, -0.35769, -1.26029, -3.456, -0.241787, 3.68037, 0.966957, -0.239134, 3.63989, 2.39237, -0.122001, -0.92832, 3.9186, -0.120936, 3.69329, -2.42738, -0.120606, -0.675624, 3.87381, -0.120079, -0.91385, -3.85687, -0.119913, 3.54119, 2.52748, -0.118983, -0.666663, -3.82167, 0, -0.191342, -3.76974, 0, 3.5897, -2.562, 0.118983, -0.666663, 3.82167, 0.119516, 3.4098, 2.51912, 0.120079, -0.91385, 3.85687, 0.120606, -0.675624, -3.87381, 0.120936, 3.69329, 2.42738, 0.122001, -0.92832, -3.9186, 0.239134, 3.63989, -2.39237, 0.241787, 3.68037, -0.966957, 0.361571, -1.2765, -3.5008, 0.363497, -1.64441, -3.02805, 0.364131, -1.64726, 3.03333, 0.605772, -1.64494, 3.02903, 0.726027, -3.57737, -0.362185, 1.20982, 2.95394, 1.57186, 1.93576, -3.21507, -0.845687, 2.05778, -3.33889, 0.725733, 2.42347, -3.70614, -0.120694, 2.45656, -3.7566, 0.122342, 2.55801, -3.60219, 0, 3.39544, 1.38424, -0.363102, 3.64752, -0.19129, 0, 3.81503, 0.645276, -0.118753, 3.82424, 1.00586, -0.11904, 3.86717, 0.654229, 0.120376, 3.88433, 1.02182, 0.12091 )

[node name="proj_snowball" type="RigidBody"]

[node name="proj_snowball" type="MeshInstance" parent="."]
mesh = SubResource( 3 )
blend_shapes/base = 1.0
blend_shapes/melt1 = 0.0
blend_shapes/melt2 = 0.0
blend_shapes/melt3 = 0.0
blend_shapes/melt4 = 0.0
blend_shapes/melt5 = 0.0
blend_shapes/melt6 = 0.0
material/0 = null

[node name="AnimationPlayer" type="AnimationPlayer" parent="proj_snowball"]
anims/proj_snowballAction = SubResource( 4 )

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 5 )
