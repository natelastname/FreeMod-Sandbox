[gd_scene load_steps=10 format=2]

[ext_resource path="res://good_props/pd_rune_key/pd_rune_key_0.001.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;
uniform sampler2D texture_1;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF.001'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.5);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node1_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node1_out0_color;
	float node1_out1_alpha;
	
	node1_in0_vector = vec3(UV, 0.0);
	node_tex_image(node1_in0_vector, texture_0, node1_out0_color, node1_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node2_in0_basecolor = node1_out0_color;
	float node2_in1_subsurface = float(0.0);
	vec3 node2_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node2_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node2_in4_metallic = float(0.0);
	float node2_in5_specular = float(0.5);
	float node2_in6_speculartint = float(0.0);
	float node2_in7_roughness = float(0.5);
	float node2_in8_anisotropic = float(0.0);
	float node2_in9_anisotropicrotation = float(0.0);
	float node2_in10_sheen = float(0.0);
	float node2_in11_sheentint = float(0.5);
	float node2_in12_clearcoat = float(0.0);
	float node2_in13_clearcoatroughness = float(0.029999999329447746);
	float node2_in14_ior = float(1.4500000476837158);
	float node2_in15_transmission = float(0.0);
	float node2_in16_transmissionroughness = float(0.0);
	vec4 node2_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node2_in18_alpha = float(1.0);
	vec3 node2_in19_normal = NORMAL;
	vec3 node2_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node2_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node2_bsdf_out0_albedo;
	float node2_bsdf_out1_sss_strength;
	float node2_bsdf_out3_specular;
	float node2_bsdf_out2_metallic;
	float node2_bsdf_out4_roughness;
	float node2_bsdf_out5_clearcoat;
	float node2_bsdf_out6_clearcoat_gloss;
	float node2_bsdf_out7_anisotropy;
	float node2_bsdf_out8_transmission;
	float node2_bsdf_out9_ior;
	
	node_bsdf_principled(node2_in0_basecolor, node2_in1_subsurface,
		node2_in3_subsurfacecolor, node2_in4_metallic, node2_in5_specular,
		node2_in7_roughness, node2_in12_clearcoat, node2_in13_clearcoatroughness,
		node2_in8_anisotropic, node2_in15_transmission, node2_in14_ior,
		node2_bsdf_out0_albedo, node2_bsdf_out1_sss_strength, node2_bsdf_out2_metallic,
		node2_bsdf_out3_specular, node2_bsdf_out4_roughness, node2_bsdf_out5_clearcoat,
		node2_bsdf_out6_clearcoat_gloss, node2_bsdf_out7_anisotropy,
		node2_bsdf_out8_transmission, node2_bsdf_out9_ior);
	
	
	// node: 'Principled BSDF.002'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node4_in0_basecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node4_in1_subsurface = float(0.0);
	vec3 node4_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node4_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node4_in4_metallic = float(0.0);
	float node4_in5_specular = float(0.5);
	float node4_in6_speculartint = float(0.0);
	float node4_in7_roughness = float(0.5);
	float node4_in8_anisotropic = float(0.0);
	float node4_in9_anisotropicrotation = float(0.0);
	float node4_in10_sheen = float(0.0);
	float node4_in11_sheentint = float(0.5);
	float node4_in12_clearcoat = float(0.0);
	float node4_in13_clearcoatroughness = float(0.029999999329447746);
	float node4_in14_ior = float(1.4500000476837158);
	float node4_in15_transmission = float(0.0);
	float node4_in16_transmissionroughness = float(0.0);
	vec4 node4_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node4_in18_alpha = float(1.0);
	vec3 node4_in19_normal = NORMAL;
	vec3 node4_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node4_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node4_bsdf_out0_albedo;
	float node4_bsdf_out1_sss_strength;
	float node4_bsdf_out3_specular;
	float node4_bsdf_out2_metallic;
	float node4_bsdf_out4_roughness;
	float node4_bsdf_out5_clearcoat;
	float node4_bsdf_out6_clearcoat_gloss;
	float node4_bsdf_out7_anisotropy;
	float node4_bsdf_out8_transmission;
	float node4_bsdf_out9_ior;
	
	node_bsdf_principled(node4_in0_basecolor, node4_in1_subsurface,
		node4_in3_subsurfacecolor, node4_in4_metallic, node4_in5_specular,
		node4_in7_roughness, node4_in12_clearcoat, node4_in13_clearcoatroughness,
		node4_in8_anisotropic, node4_in15_transmission, node4_in14_ior,
		node4_bsdf_out0_albedo, node4_bsdf_out1_sss_strength, node4_bsdf_out2_metallic,
		node4_bsdf_out3_specular, node4_bsdf_out4_roughness, node4_bsdf_out5_clearcoat,
		node4_bsdf_out6_clearcoat_gloss, node4_bsdf_out7_anisotropy,
		node4_bsdf_out8_transmission, node4_bsdf_out9_ior);
	
	
	// node: 'Image Texture.001'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node5_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node5_out0_color;
	float node5_out1_alpha;
	
	node5_in0_vector = vec3(UV, 0.0);
	node_tex_image(node5_in0_vector, texture_1, node5_out0_color, node5_out1_alpha);
	
	
	ALBEDO = node2_bsdf_out0_albedo;
	SSS_STRENGTH = node2_bsdf_out1_sss_strength;
	SPECULAR = node2_bsdf_out3_specular;
	METALLIC = node2_bsdf_out2_metallic;
	ROUGHNESS = node2_bsdf_out4_roughness;
	CLEARCOAT = node2_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node2_bsdf_out6_clearcoat_gloss;
	NORMAL = node2_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node2_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node2_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node2_bsdf_out7_anisotropy;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/texture_0 = ExtResource( 1 )

[sub_resource type="ArrayMesh" id=3]
resource_name = "pd_rune_key001"
surfaces/0 = {
"aabb": AABB( -1.75321, 0.179649, -4.7941, 3.23672, 22.7257, 10.1393 ),
"array_data": PoolByteArray( 47, 105, 224, 191, 19, 184, 71, 64, 52, 128, 168, 64, 129, 0, 0, 0, 0, 0, 129, 129, 52, 57, 161, 57, 47, 105, 224, 191, 232, 245, 55, 62, 68, 105, 153, 192, 129, 0, 0, 0, 0, 0, 129, 129, 143, 58, 94, 58, 47, 105, 224, 191, 232, 245, 55, 62, 52, 128, 168, 64, 129, 0, 0, 0, 0, 0, 129, 129, 52, 57, 94, 58, 47, 105, 224, 191, 19, 184, 71, 64, 68, 105, 153, 192, 0, 127, 0, 0, 0, 0, 129, 127, 30, 53, 161, 57, 47, 105, 224, 191, 19, 184, 71, 64, 52, 128, 168, 64, 0, 127, 0, 0, 0, 0, 129, 127, 210, 48, 161, 57, 44, 101, 157, 63, 19, 184, 71, 64, 52, 128, 168, 64, 0, 127, 0, 0, 0, 0, 129, 127, 90, 46, 94, 58, 47, 105, 224, 191, 19, 184, 71, 64, 52, 128, 168, 64, 0, 0, 127, 0, 166, 167, 0, 129, 52, 57, 161, 57, 47, 105, 224, 191, 232, 245, 55, 62, 52, 128, 168, 64, 0, 0, 127, 0, 166, 167, 0, 129, 52, 57, 94, 58, 44, 101, 157, 63, 232, 245, 55, 62, 52, 128, 168, 64, 0, 0, 127, 0, 166, 167, 0, 129, 203, 56, 26, 59, 44, 101, 157, 63, 19, 184, 71, 64, 52, 128, 168, 64, 127, 0, 0, 0, 0, 0, 129, 127, 90, 46, 94, 58, 44, 101, 157, 63, 232, 245, 55, 62, 52, 128, 168, 64, 127, 0, 0, 0, 0, 0, 129, 127, 90, 46, 26, 59, 44, 101, 157, 63, 232, 245, 55, 62, 68, 105, 153, 192, 127, 0, 0, 0, 0, 0, 129, 127, 75, 52, 26, 59, 44, 101, 157, 63, 232, 245, 55, 62, 68, 105, 153, 192, 0, 0, 129, 0, 166, 167, 0, 127, 75, 52, 26, 59, 47, 105, 224, 191, 232, 245, 55, 62, 68, 105, 153, 192, 0, 0, 129, 0, 166, 167, 0, 127, 30, 53, 94, 58, 47, 105, 224, 191, 19, 184, 71, 64, 68, 105, 153, 192, 0, 0, 129, 0, 166, 167, 0, 127, 30, 53, 161, 57, 47, 105, 224, 191, 232, 245, 55, 62, 52, 128, 168, 64, 0, 129, 0, 0, 0, 0, 129, 129, 52, 57, 94, 58, 47, 105, 224, 191, 232, 245, 55, 62, 68, 105, 153, 192, 0, 129, 0, 0, 0, 0, 129, 129, 143, 58, 94, 58, 44, 101, 157, 63, 232, 245, 55, 62, 68, 105, 153, 192, 0, 129, 0, 0, 0, 0, 129, 129, 37, 58, 26, 59, 47, 105, 224, 191, 19, 184, 71, 64, 68, 105, 153, 192, 129, 0, 0, 0, 0, 0, 129, 129, 143, 58, 161, 57, 44, 101, 157, 63, 19, 184, 71, 64, 68, 105, 153, 192, 0, 127, 0, 0, 0, 0, 129, 127, 75, 52, 94, 58, 44, 101, 157, 63, 19, 184, 71, 64, 52, 128, 168, 64, 0, 0, 127, 0, 166, 167, 0, 129, 203, 56, 94, 58, 44, 101, 157, 63, 19, 184, 71, 64, 68, 105, 153, 192, 127, 0, 0, 0, 0, 0, 129, 127, 75, 52, 94, 58, 44, 101, 157, 63, 19, 184, 71, 64, 68, 105, 153, 192, 0, 0, 129, 0, 166, 167, 0, 127, 75, 52, 94, 58, 44, 101, 157, 63, 232, 245, 55, 62, 52, 128, 168, 64, 0, 129, 0, 0, 0, 0, 129, 129, 203, 56, 26, 59, 179, 234, 191, 191, 11, 239, 136, 64, 49, 7, 61, 191, 129, 0, 0, 0, 0, 0, 129, 129, 173, 57, 40, 56, 179, 234, 191, 191, 11, 239, 136, 64, 105, 58, 167, 64, 129, 0, 0, 0, 0, 0, 129, 129, 233, 56, 40, 56, 179, 234, 191, 191, 135, 191, 236, 64, 105, 58, 167, 64, 129, 0, 0, 0, 0, 0, 129, 129, 233, 56, 215, 54, 179, 234, 191, 191, 135, 191, 236, 64, 49, 7, 61, 191, 0, 127, 0, 0, 0, 0, 129, 127, 180, 50, 215, 54, 179, 234, 191, 191, 135, 191, 236, 64, 105, 58, 167, 64, 0, 127, 0, 0, 0, 0, 129, 127, 75, 47, 215, 54, 168, 227, 189, 63, 135, 191, 236, 64, 105, 58, 167, 64, 0, 127, 0, 0, 0, 0, 129, 127, 0, 44, 40, 56, 179, 234, 191, 191, 135, 191, 236, 64, 105, 58, 167, 64, 0, 0, 127, 0, 169, 165, 0, 129, 233, 56, 215, 54, 179, 234, 191, 191, 11, 239, 136, 64, 105, 58, 167, 64, 0, 0, 127, 0, 169, 165, 0, 129, 233, 56, 40, 56, 168, 227, 189, 63, 11, 239, 136, 64, 105, 58, 167, 64, 0, 0, 127, 0, 169, 165, 0, 129, 128, 56, 229, 56, 168, 227, 189, 63, 135, 191, 236, 64, 105, 58, 167, 64, 127, 0, 0, 0, 0, 0, 129, 127, 0, 44, 40, 56, 168, 227, 189, 63, 11, 239, 136, 64, 105, 58, 167, 64, 127, 0, 0, 0, 0, 0, 129, 127, 0, 44, 229, 56, 168, 227, 189, 63, 11, 239, 136, 64, 49, 7, 61, 191, 127, 0, 0, 0, 0, 0, 129, 127, 15, 49, 229, 56, 168, 227, 189, 63, 11, 239, 136, 64, 49, 7, 61, 191, 0, 0, 129, 0, 169, 165, 0, 127, 15, 49, 229, 56, 179, 234, 191, 191, 11, 239, 136, 64, 49, 7, 61, 191, 0, 0, 129, 0, 169, 165, 0, 127, 180, 50, 40, 56, 179, 234, 191, 191, 135, 191, 236, 64, 49, 7, 61, 191, 0, 0, 129, 0, 169, 165, 0, 127, 180, 50, 215, 54, 179, 234, 191, 191, 11, 239, 136, 64, 105, 58, 167, 64, 0, 129, 0, 0, 0, 0, 129, 129, 233, 56, 40, 56, 179, 234, 191, 191, 11, 239, 136, 64, 49, 7, 61, 191, 0, 129, 0, 0, 0, 0, 129, 129, 173, 57, 40, 56, 168, 227, 189, 63, 11, 239, 136, 64, 49, 7, 61, 191, 0, 129, 0, 0, 0, 0, 129, 129, 67, 57, 229, 56, 179, 234, 191, 191, 135, 191, 236, 64, 49, 7, 61, 191, 129, 0, 0, 0, 0, 0, 129, 129, 173, 57, 215, 54, 168, 227, 189, 63, 135, 191, 236, 64, 49, 7, 61, 191, 0, 127, 0, 0, 0, 0, 129, 127, 15, 49, 40, 56, 168, 227, 189, 63, 135, 191, 236, 64, 105, 58, 167, 64, 0, 0, 127, 0, 169, 165, 0, 129, 128, 56, 40, 56, 168, 227, 189, 63, 135, 191, 236, 64, 49, 7, 61, 191, 127, 0, 0, 0, 0, 0, 129, 127, 15, 49, 40, 56, 168, 227, 189, 63, 135, 191, 236, 64, 49, 7, 61, 191, 0, 0, 129, 0, 169, 165, 0, 127, 15, 49, 40, 56, 168, 227, 189, 63, 11, 239, 136, 64, 105, 58, 167, 64, 0, 129, 0, 0, 0, 0, 129, 129, 128, 56, 229, 56, 11, 36, 180, 63, 40, 15, 83, 65, 105, 169, 216, 191, 0, 0, 127, 0, 166, 167, 0, 129, 218, 58, 229, 56, 35, 74, 203, 191, 40, 15, 83, 65, 105, 169, 216, 191, 0, 0, 127, 0, 167, 166, 0, 129, 67, 59, 40, 56, 35, 74, 203, 191, 231, 58, 131, 64, 105, 169, 216, 191, 0, 0, 127, 0, 164, 170, 0, 129, 67, 59, 94, 58, 11, 36, 180, 63, 231, 58, 131, 64, 105, 169, 216, 191, 0, 129, 0, 0, 0, 0, 130, 129, 218, 58, 0, 59, 35, 74, 203, 191, 231, 58, 131, 64, 105, 169, 216, 191, 0, 129, 0, 0, 0, 0, 130, 129, 67, 59, 94, 58, 247, 233, 204, 191, 231, 58, 131, 64, 11, 152, 149, 192, 0, 129, 0, 0, 0, 0, 130, 129, 173, 59, 94, 58, 11, 36, 180, 63, 57, 197, 129, 65, 105, 169, 216, 191, 126, 0, 0, 0, 0, 0, 130, 127, 180, 53, 40, 56, 11, 36, 180, 63, 40, 15, 83, 65, 105, 169, 216, 191, 126, 0, 0, 0, 0, 0, 130, 127, 180, 53, 229, 56, 56, 132, 178, 63, 40, 15, 83, 65, 11, 152, 149, 192, 126, 0, 0, 0, 0, 0, 130, 127, 135, 54, 229, 56, 11, 36, 180, 63, 40, 15, 83, 65, 105, 169, 216, 191, 126, 0, 0, 0, 0, 0, 130, 127, 180, 53, 229, 56, 11, 36, 180, 63, 231, 58, 131, 64, 105, 169, 216, 191, 126, 0, 0, 0, 0, 0, 130, 127, 180, 53, 0, 59, 56, 132, 178, 63, 231, 58, 131, 64, 11, 152, 149, 192, 126, 0, 0, 0, 0, 0, 130, 127, 135, 54, 0, 59, 56, 132, 178, 63, 57, 197, 129, 65, 11, 152, 149, 192, 0, 0, 129, 0, 167, 166, 0, 127, 135, 54, 40, 56, 56, 132, 178, 63, 40, 15, 83, 65, 11, 152, 149, 192, 0, 0, 129, 0, 167, 167, 0, 127, 135, 54, 229, 56, 247, 233, 204, 191, 40, 15, 83, 65, 11, 152, 149, 192, 0, 0, 129, 0, 167, 166, 0, 127, 90, 55, 40, 56, 56, 132, 178, 63, 231, 58, 131, 64, 11, 152, 149, 192, 0, 0, 129, 0, 163, 171, 0, 127, 135, 54, 0, 59, 247, 233, 204, 191, 231, 58, 131, 64, 11, 152, 149, 192, 0, 0, 129, 0, 164, 170, 0, 127, 90, 55, 94, 58, 35, 74, 203, 191, 57, 197, 129, 65, 105, 169, 216, 191, 130, 0, 0, 0, 0, 0, 130, 129, 67, 59, 215, 54, 247, 233, 204, 191, 57, 197, 129, 65, 11, 152, 149, 192, 130, 0, 0, 0, 0, 0, 130, 129, 173, 59, 215, 54, 247, 233, 204, 191, 40, 15, 83, 65, 11, 152, 149, 192, 130, 0, 0, 0, 0, 0, 130, 129, 173, 59, 40, 56, 35, 74, 203, 191, 40, 15, 83, 65, 105, 169, 216, 191, 130, 0, 0, 0, 0, 0, 130, 129, 67, 59, 40, 56, 247, 233, 204, 191, 40, 15, 83, 65, 11, 152, 149, 192, 130, 0, 0, 0, 0, 0, 130, 129, 173, 59, 40, 56, 247, 233, 204, 191, 231, 58, 131, 64, 11, 152, 149, 192, 130, 0, 0, 0, 0, 0, 130, 129, 173, 59, 94, 58, 11, 36, 180, 63, 57, 197, 129, 65, 105, 169, 216, 191, 0, 127, 0, 0, 0, 0, 130, 127, 180, 53, 40, 56, 35, 74, 203, 191, 57, 197, 129, 65, 105, 169, 216, 191, 0, 127, 0, 0, 0, 0, 130, 127, 135, 54, 215, 54, 35, 74, 203, 191, 57, 197, 129, 65, 235, 197, 169, 64, 0, 127, 0, 0, 0, 0, 129, 127, 165, 52, 215, 54, 11, 36, 180, 63, 57, 197, 129, 65, 235, 197, 169, 64, 0, 0, 127, 0, 167, 166, 0, 129, 233, 57, 40, 56, 35, 74, 203, 191, 57, 197, 129, 65, 235, 197, 169, 64, 0, 0, 127, 0, 167, 166, 0, 129, 82, 58, 215, 54, 35, 74, 203, 191, 40, 15, 83, 65, 235, 197, 169, 64, 0, 0, 127, 0, 167, 166, 0, 129, 82, 58, 40, 56, 11, 36, 180, 63, 57, 197, 129, 65, 105, 169, 216, 191, 127, 0, 0, 0, 0, 0, 129, 127, 180, 53, 40, 56, 11, 36, 180, 63, 57, 197, 129, 65, 235, 197, 169, 64, 127, 0, 0, 0, 0, 0, 129, 127, 165, 51, 40, 56, 11, 36, 180, 63, 40, 15, 83, 65, 235, 197, 169, 64, 127, 0, 0, 0, 0, 0, 129, 127, 165, 51, 229, 56, 11, 36, 180, 63, 40, 15, 83, 65, 105, 169, 216, 191, 0, 129, 0, 0, 0, 0, 129, 129, 218, 58, 229, 56, 11, 36, 180, 63, 40, 15, 83, 65, 235, 197, 169, 64, 0, 129, 0, 0, 0, 0, 129, 129, 233, 57, 229, 56, 35, 74, 203, 191, 40, 15, 83, 65, 235, 197, 169, 64, 0, 129, 0, 0, 0, 0, 129, 129, 82, 58, 40, 56, 35, 74, 203, 191, 57, 197, 129, 65, 105, 169, 216, 191, 129, 0, 0, 0, 0, 0, 129, 129, 67, 59, 215, 54, 35, 74, 203, 191, 40, 15, 83, 65, 105, 169, 216, 191, 129, 0, 0, 0, 0, 0, 129, 129, 67, 59, 40, 56, 35, 74, 203, 191, 40, 15, 83, 65, 235, 197, 169, 64, 129, 0, 0, 0, 0, 0, 129, 129, 82, 58, 40, 56, 247, 233, 204, 191, 57, 197, 129, 65, 11, 152, 149, 192, 0, 127, 0, 0, 0, 0, 130, 127, 90, 55, 215, 54, 11, 36, 180, 63, 231, 58, 131, 64, 105, 169, 216, 191, 0, 0, 127, 0, 163, 171, 0, 129, 218, 58, 0, 59, 56, 132, 178, 63, 231, 58, 131, 64, 11, 152, 149, 192, 0, 129, 0, 0, 0, 0, 130, 129, 67, 59, 0, 59, 56, 132, 178, 63, 40, 15, 83, 65, 11, 152, 149, 192, 126, 0, 0, 0, 0, 0, 130, 127, 135, 54, 229, 56, 56, 132, 178, 63, 57, 197, 129, 65, 11, 152, 149, 192, 126, 0, 0, 0, 0, 0, 130, 127, 135, 54, 40, 56, 11, 36, 180, 63, 57, 197, 129, 65, 105, 169, 216, 191, 126, 0, 0, 0, 0, 0, 130, 127, 180, 53, 40, 56, 56, 132, 178, 63, 40, 15, 83, 65, 11, 152, 149, 192, 126, 0, 0, 0, 0, 0, 130, 127, 135, 54, 229, 56, 247, 233, 204, 191, 57, 197, 129, 65, 11, 152, 149, 192, 0, 0, 129, 0, 167, 166, 0, 127, 90, 55, 215, 54, 247, 233, 204, 191, 40, 15, 83, 65, 11, 152, 149, 192, 130, 0, 0, 0, 0, 0, 130, 129, 173, 59, 40, 56, 35, 74, 203, 191, 40, 15, 83, 65, 105, 169, 216, 191, 130, 0, 0, 0, 0, 0, 130, 129, 67, 59, 40, 56, 35, 74, 203, 191, 57, 197, 129, 65, 105, 169, 216, 191, 130, 0, 0, 0, 0, 0, 130, 129, 67, 59, 215, 54, 35, 74, 203, 191, 231, 58, 131, 64, 105, 169, 216, 191, 130, 0, 0, 0, 0, 0, 130, 129, 67, 59, 94, 58, 11, 36, 180, 63, 57, 197, 129, 65, 235, 197, 169, 64, 0, 127, 0, 0, 0, 0, 129, 127, 165, 51, 40, 56, 11, 36, 180, 63, 40, 15, 83, 65, 235, 197, 169, 64, 0, 0, 127, 0, 167, 166, 0, 129, 233, 57, 229, 56, 11, 36, 180, 63, 40, 15, 83, 65, 105, 169, 216, 191, 127, 0, 0, 0, 0, 0, 129, 127, 180, 53, 229, 56, 35, 74, 203, 191, 40, 15, 83, 65, 105, 169, 216, 191, 0, 129, 0, 0, 0, 0, 129, 129, 67, 59, 40, 56, 35, 74, 203, 191, 57, 197, 129, 65, 235, 197, 169, 64, 129, 0, 0, 0, 0, 0, 129, 129, 82, 58, 215, 54, 11, 36, 180, 63, 57, 197, 129, 65, 105, 169, 216, 191, 0, 127, 0, 0, 0, 0, 130, 127, 180, 53, 40, 56, 56, 132, 178, 63, 57, 197, 129, 65, 11, 152, 149, 192, 0, 127, 0, 0, 0, 0, 130, 127, 135, 54, 40, 56, 247, 233, 204, 191, 57, 197, 129, 65, 11, 152, 149, 192, 0, 127, 0, 0, 0, 0, 130, 127, 90, 55, 215, 54, 30, 138, 206, 191, 236, 47, 136, 65, 158, 12, 147, 192, 129, 0, 0, 0, 0, 0, 129, 129, 37, 59, 26, 52, 30, 138, 206, 191, 236, 47, 136, 65, 179, 123, 206, 191, 129, 0, 0, 0, 0, 0, 129, 129, 188, 58, 26, 52, 30, 138, 206, 191, 14, 62, 183, 65, 179, 123, 206, 191, 129, 0, 0, 0, 0, 0, 129, 129, 188, 58, 161, 44, 30, 138, 206, 191, 14, 62, 183, 65, 158, 12, 147, 192, 0, 127, 0, 0, 0, 0, 129, 127, 75, 54, 161, 44, 30, 138, 206, 191, 14, 62, 183, 65, 179, 123, 206, 191, 0, 127, 0, 0, 0, 0, 129, 127, 120, 53, 161, 44, 17, 228, 176, 63, 14, 62, 183, 65, 179, 123, 206, 191, 0, 127, 0, 0, 0, 0, 129, 127, 165, 52, 67, 49, 30, 138, 206, 191, 14, 62, 183, 65, 179, 123, 206, 191, 0, 0, 127, 0, 166, 167, 0, 129, 188, 58, 161, 44, 30, 138, 206, 191, 236, 47, 136, 65, 179, 123, 206, 191, 0, 0, 127, 0, 159, 175, 0, 129, 188, 58, 26, 52, 17, 228, 176, 63, 236, 47, 136, 65, 179, 123, 206, 191, 0, 0, 127, 0, 162, 171, 0, 129, 82, 58, 94, 53, 17, 228, 176, 63, 14, 62, 183, 65, 179, 123, 206, 191, 127, 0, 0, 0, 0, 0, 129, 127, 165, 52, 67, 49, 17, 228, 176, 63, 236, 47, 136, 65, 179, 123, 206, 191, 127, 0, 0, 0, 0, 0, 129, 127, 165, 52, 94, 53, 17, 228, 176, 63, 236, 47, 136, 65, 158, 12, 147, 192, 127, 0, 0, 0, 0, 0, 129, 127, 120, 53, 94, 53, 17, 228, 176, 63, 236, 47, 136, 65, 158, 12, 147, 192, 0, 0, 129, 0, 162, 171, 0, 127, 120, 53, 94, 53, 30, 138, 206, 191, 236, 47, 136, 65, 158, 12, 147, 192, 0, 0, 129, 0, 159, 175, 0, 127, 75, 54, 26, 52, 30, 138, 206, 191, 14, 62, 183, 65, 158, 12, 147, 192, 0, 0, 129, 0, 166, 167, 0, 127, 75, 54, 161, 44, 30, 138, 206, 191, 236, 47, 136, 65, 179, 123, 206, 191, 0, 129, 0, 0, 0, 0, 129, 129, 188, 58, 26, 52, 30, 138, 206, 191, 236, 47, 136, 65, 158, 12, 147, 192, 0, 129, 0, 0, 0, 0, 129, 129, 37, 59, 26, 52, 17, 228, 176, 63, 236, 47, 136, 65, 158, 12, 147, 192, 0, 129, 0, 0, 0, 0, 129, 129, 188, 58, 94, 53, 30, 138, 206, 191, 14, 62, 183, 65, 158, 12, 147, 192, 129, 0, 0, 0, 0, 0, 129, 129, 37, 59, 161, 44, 17, 228, 176, 63, 14, 62, 183, 65, 158, 12, 147, 192, 0, 127, 0, 0, 0, 0, 129, 127, 120, 53, 67, 49, 17, 228, 176, 63, 14, 62, 183, 65, 179, 123, 206, 191, 0, 0, 127, 0, 169, 164, 0, 129, 82, 58, 67, 49, 17, 228, 176, 63, 14, 62, 183, 65, 158, 12, 147, 192, 127, 0, 0, 0, 0, 0, 129, 127, 120, 53, 67, 49, 17, 228, 176, 63, 14, 62, 183, 65, 158, 12, 147, 192, 0, 0, 129, 0, 169, 164, 0, 127, 120, 53, 67, 49, 17, 228, 176, 63, 236, 47, 136, 65, 179, 123, 206, 191, 0, 129, 0, 0, 0, 0, 129, 129, 82, 58, 94, 53, 124, 10, 200, 191, 227, 182, 159, 65, 226, 59, 23, 64, 0, 0, 129, 0, 167, 166, 0, 127, 120, 50, 175, 49, 178, 99, 183, 63, 227, 182, 159, 65, 226, 59, 23, 64, 0, 0, 129, 0, 161, 173, 0, 127, 210, 48, 26, 52, 178, 99, 183, 63, 62, 121, 135, 65, 226, 59, 23, 64, 0, 0, 129, 0, 167, 166, 0, 127, 210, 48, 148, 53, 124, 10, 200, 191, 62, 121, 135, 65, 226, 59, 23, 64, 0, 129, 0, 0, 0, 0, 130, 129, 158, 57, 26, 52, 178, 99, 183, 63, 62, 121, 135, 65, 226, 59, 23, 64, 0, 129, 0, 0, 0, 0, 129, 129, 52, 57, 148, 53, 178, 99, 183, 63, 62, 121, 135, 65, 162, 11, 171, 64, 0, 129, 0, 0, 0, 0, 130, 129, 203, 56, 148, 53, 124, 10, 200, 191, 14, 62, 183, 65, 226, 59, 23, 64, 130, 0, 0, 0, 0, 0, 130, 129, 158, 57, 121, 45, 124, 10, 200, 191, 227, 182, 159, 65, 226, 59, 23, 64, 130, 0, 0, 0, 0, 0, 130, 129, 158, 57, 175, 49, 85, 106, 198, 191, 227, 182, 159, 65, 162, 11, 171, 64, 130, 0, 0, 0, 0, 0, 130, 129, 52, 57, 175, 49, 124, 10, 200, 191, 227, 182, 159, 65, 226, 59, 23, 64, 130, 0, 0, 0, 0, 0, 130, 129, 158, 57, 175, 49, 124, 10, 200, 191, 62, 121, 135, 65, 226, 59, 23, 64, 130, 0, 0, 0, 0, 0, 130, 129, 158, 57, 26, 52, 85, 106, 198, 191, 62, 121, 135, 65, 162, 11, 171, 64, 130, 0, 0, 0, 0, 0, 130, 129, 52, 57, 26, 52, 85, 106, 198, 191, 14, 62, 183, 65, 162, 11, 171, 64, 0, 0, 127, 0, 166, 167, 0, 129, 52, 57, 121, 45, 85, 106, 198, 191, 227, 182, 159, 65, 162, 11, 171, 64, 0, 0, 127, 0, 163, 170, 0, 129, 52, 57, 175, 49, 178, 99, 183, 63, 227, 182, 159, 65, 162, 11, 171, 64, 0, 0, 127, 0, 163, 170, 0, 129, 203, 56, 26, 52, 85, 106, 198, 191, 62, 121, 135, 65, 162, 11, 171, 64, 0, 0, 127, 0, 175, 159, 0, 129, 52, 57, 26, 52, 178, 99, 183, 63, 62, 121, 135, 65, 162, 11, 171, 64, 0, 0, 127, 0, 167, 166, 0, 129, 203, 56, 148, 53, 178, 99, 183, 63, 14, 62, 183, 65, 226, 59, 23, 64, 127, 0, 0, 0, 0, 0, 129, 127, 210, 48, 175, 49, 178, 99, 183, 63, 14, 62, 183, 65, 162, 11, 171, 64, 127, 0, 0, 0, 0, 0, 129, 127, 90, 46, 175, 49, 178, 99, 183, 63, 227, 182, 159, 65, 162, 11, 171, 64, 127, 0, 0, 0, 0, 0, 129, 127, 90, 46, 26, 52, 178, 99, 183, 63, 227, 182, 159, 65, 226, 59, 23, 64, 127, 0, 0, 0, 0, 0, 129, 127, 210, 48, 26, 52, 178, 99, 183, 63, 62, 121, 135, 65, 162, 11, 171, 64, 127, 0, 0, 0, 0, 0, 129, 127, 90, 46, 148, 53, 124, 10, 200, 191, 14, 62, 183, 65, 226, 59, 23, 64, 0, 127, 0, 0, 0, 0, 130, 127, 120, 50, 121, 45, 178, 99, 183, 63, 14, 62, 183, 65, 226, 59, 23, 64, 0, 127, 0, 0, 0, 0, 130, 127, 210, 48, 175, 49, 223, 195, 181, 63, 14, 62, 183, 65, 90, 217, 50, 191, 0, 127, 0, 0, 0, 0, 130, 127, 120, 50, 175, 49, 124, 10, 200, 191, 14, 62, 183, 65, 130, 171, 40, 191, 255, 0, 130, 0, 166, 167, 1, 127, 15, 52, 121, 45, 223, 195, 181, 63, 14, 62, 183, 65, 90, 217, 50, 191, 255, 0, 130, 0, 173, 161, 1, 127, 120, 50, 175, 49, 223, 195, 181, 63, 227, 182, 159, 65, 90, 217, 50, 191, 255, 0, 130, 0, 166, 167, 1, 127, 120, 50, 26, 52, 124, 10, 200, 191, 14, 62, 183, 65, 226, 59, 23, 64, 129, 0, 0, 0, 0, 0, 129, 129, 158, 57, 121, 45, 124, 10, 200, 191, 14, 62, 183, 65, 130, 171, 40, 191, 129, 0, 0, 0, 0, 0, 129, 129, 7, 58, 121, 45, 124, 10, 200, 191, 227, 182, 159, 65, 130, 171, 40, 191, 129, 0, 0, 0, 0, 0, 129, 129, 7, 58, 175, 49, 124, 10, 200, 191, 227, 182, 159, 65, 226, 59, 23, 64, 0, 129, 0, 0, 0, 0, 129, 129, 158, 57, 175, 49, 124, 10, 200, 191, 227, 182, 159, 65, 130, 171, 40, 191, 0, 129, 0, 0, 0, 0, 129, 129, 7, 58, 175, 49, 223, 195, 181, 63, 227, 182, 159, 65, 90, 217, 50, 191, 0, 129, 0, 0, 0, 0, 129, 129, 158, 57, 26, 52, 178, 99, 183, 63, 14, 62, 183, 65, 226, 59, 23, 64, 126, 0, 0, 0, 0, 0, 130, 127, 210, 48, 175, 49, 178, 99, 183, 63, 227, 182, 159, 65, 226, 59, 23, 64, 126, 0, 0, 0, 0, 0, 130, 127, 210, 48, 26, 52, 223, 195, 181, 63, 227, 182, 159, 65, 90, 217, 50, 191, 126, 0, 0, 0, 0, 0, 130, 127, 120, 50, 26, 52, 178, 99, 183, 63, 14, 62, 183, 65, 162, 11, 171, 64, 0, 127, 0, 0, 0, 0, 129, 127, 90, 46, 175, 49, 178, 99, 183, 63, 14, 62, 183, 65, 226, 59, 23, 64, 0, 127, 0, 0, 0, 0, 129, 127, 210, 48, 175, 49, 124, 10, 200, 191, 14, 62, 183, 65, 226, 59, 23, 64, 0, 127, 0, 0, 0, 0, 129, 127, 120, 50, 121, 45, 124, 10, 200, 191, 62, 121, 135, 65, 226, 59, 23, 64, 0, 0, 129, 0, 174, 160, 0, 127, 120, 50, 26, 52, 85, 106, 198, 191, 62, 121, 135, 65, 162, 11, 171, 64, 0, 129, 0, 0, 0, 0, 130, 129, 52, 57, 26, 52, 85, 106, 198, 191, 227, 182, 159, 65, 162, 11, 171, 64, 130, 0, 0, 0, 0, 0, 130, 129, 52, 57, 175, 49, 85, 106, 198, 191, 14, 62, 183, 65, 162, 11, 171, 64, 130, 0, 0, 0, 0, 0, 130, 129, 52, 57, 121, 45, 124, 10, 200, 191, 14, 62, 183, 65, 226, 59, 23, 64, 130, 0, 0, 0, 0, 0, 130, 129, 158, 57, 121, 45, 85, 106, 198, 191, 62, 121, 135, 65, 162, 11, 171, 64, 130, 0, 0, 0, 0, 0, 130, 129, 52, 57, 26, 52, 85, 106, 198, 191, 227, 182, 159, 65, 162, 11, 171, 64, 130, 0, 0, 0, 0, 0, 130, 129, 52, 57, 175, 49, 124, 10, 200, 191, 227, 182, 159, 65, 226, 59, 23, 64, 130, 0, 0, 0, 0, 0, 130, 129, 158, 57, 175, 49, 178, 99, 183, 63, 14, 62, 183, 65, 162, 11, 171, 64, 0, 0, 127, 0, 173, 161, 0, 129, 203, 56, 175, 49, 178, 99, 183, 63, 62, 121, 135, 65, 226, 59, 23, 64, 127, 0, 0, 0, 0, 0, 129, 127, 210, 48, 148, 53, 124, 10, 200, 191, 14, 62, 183, 65, 130, 171, 40, 191, 0, 127, 0, 0, 0, 0, 129, 127, 15, 52, 121, 45, 124, 10, 200, 191, 227, 182, 159, 65, 130, 171, 40, 191, 255, 0, 130, 0, 160, 175, 1, 127, 15, 52, 175, 49, 124, 10, 200, 191, 227, 182, 159, 65, 226, 59, 23, 64, 129, 0, 0, 0, 0, 0, 129, 129, 158, 57, 175, 49, 223, 195, 181, 63, 227, 182, 159, 65, 90, 217, 50, 191, 0, 129, 0, 0, 0, 0, 130, 129, 158, 57, 26, 52, 178, 99, 183, 63, 227, 182, 159, 65, 226, 59, 23, 64, 0, 129, 0, 0, 0, 0, 130, 129, 52, 57, 26, 52, 124, 10, 200, 191, 227, 182, 159, 65, 226, 59, 23, 64, 0, 129, 0, 0, 0, 0, 130, 129, 158, 57, 175, 49, 223, 195, 181, 63, 227, 182, 159, 65, 90, 217, 50, 191, 126, 0, 0, 0, 0, 0, 130, 127, 120, 50, 26, 52, 223, 195, 181, 63, 14, 62, 183, 65, 90, 217, 50, 191, 126, 0, 0, 0, 0, 0, 130, 127, 120, 50, 175, 49, 178, 99, 183, 63, 14, 62, 183, 65, 226, 59, 23, 64, 126, 0, 0, 0, 0, 0, 130, 127, 210, 48, 175, 49, 124, 10, 200, 191, 14, 62, 183, 65, 226, 59, 23, 64, 0, 127, 0, 0, 0, 0, 130, 127, 120, 50, 121, 45, 85, 106, 198, 191, 14, 62, 183, 65, 162, 11, 171, 64, 0, 127, 0, 0, 0, 0, 130, 127, 210, 48, 121, 45, 178, 99, 183, 63, 14, 62, 183, 65, 162, 11, 171, 64, 0, 127, 0, 0, 0, 0, 130, 127, 90, 46, 175, 49 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 3, 0, 5, 0, 4, 0, 6, 0, 8, 0, 7, 0, 9, 0, 11, 0, 10, 0, 12, 0, 14, 0, 13, 0, 15, 0, 17, 0, 16, 0, 0, 0, 1, 0, 18, 0, 5, 0, 3, 0, 19, 0, 6, 0, 20, 0, 8, 0, 11, 0, 9, 0, 21, 0, 14, 0, 12, 0, 22, 0, 17, 0, 15, 0, 23, 0, 24, 0, 26, 0, 25, 0, 27, 0, 29, 0, 28, 0, 30, 0, 32, 0, 31, 0, 33, 0, 35, 0, 34, 0, 36, 0, 38, 0, 37, 0, 39, 0, 41, 0, 40, 0, 26, 0, 24, 0, 42, 0, 29, 0, 27, 0, 43, 0, 32, 0, 30, 0, 44, 0, 35, 0, 33, 0, 45, 0, 38, 0, 36, 0, 46, 0, 41, 0, 39, 0, 47, 0, 48, 0, 50, 0, 49, 0, 51, 0, 53, 0, 52, 0, 54, 0, 56, 0, 55, 0, 57, 0, 59, 0, 58, 0, 60, 0, 62, 0, 61, 0, 61, 0, 64, 0, 63, 0, 65, 0, 67, 0, 66, 0, 68, 0, 70, 0, 69, 0, 71, 0, 73, 0, 72, 0, 74, 0, 76, 0, 75, 0, 77, 0, 79, 0, 78, 0, 80, 0, 82, 0, 81, 0, 83, 0, 85, 0, 84, 0, 86, 0, 71, 0, 72, 0, 50, 0, 48, 0, 87, 0, 53, 0, 51, 0, 88, 0, 89, 0, 91, 0, 90, 0, 59, 0, 57, 0, 92, 0, 62, 0, 60, 0, 93, 0, 64, 0, 61, 0, 62, 0, 94, 0, 96, 0, 95, 0, 70, 0, 68, 0, 97, 0, 73, 0, 71, 0, 98, 0, 76, 0, 74, 0, 99, 0, 79, 0, 77, 0, 100, 0, 82, 0, 80, 0, 101, 0, 85, 0, 83, 0, 102, 0, 103, 0, 105, 0, 104, 0, 106, 0, 108, 0, 107, 0, 109, 0, 111, 0, 110, 0, 112, 0, 114, 0, 113, 0, 115, 0, 117, 0, 116, 0, 118, 0, 120, 0, 119, 0, 121, 0, 123, 0, 122, 0, 108, 0, 106, 0, 124, 0, 111, 0, 109, 0, 125, 0, 114, 0, 112, 0, 126, 0, 117, 0, 115, 0, 127, 0, 120, 0, 118, 0, 128, 0, 123, 0, 121, 0, 129, 0, 130, 0, 132, 0, 131, 0, 133, 0, 135, 0, 134, 0, 136, 0, 138, 0, 137, 0, 139, 0, 141, 0, 140, 0, 142, 0, 144, 0, 143, 0, 143, 0, 146, 0, 145, 0, 147, 0, 149, 0, 148, 0, 150, 0, 151, 0, 149, 0, 152, 0, 154, 0, 153, 0, 155, 0, 157, 0, 156, 0, 158, 0, 160, 0, 159, 0, 161, 0, 163, 0, 162, 0, 164, 0, 166, 0, 165, 0, 167, 0, 169, 0, 168, 0, 132, 0, 130, 0, 170, 0, 135, 0, 133, 0, 171, 0, 172, 0, 174, 0, 173, 0, 175, 0, 177, 0, 176, 0, 144, 0, 142, 0, 178, 0, 146, 0, 143, 0, 144, 0, 149, 0, 147, 0, 150, 0, 151, 0, 150, 0, 179, 0, 154, 0, 152, 0, 180, 0, 157, 0, 155, 0, 181, 0, 160, 0, 158, 0, 182, 0, 183, 0, 185, 0, 184, 0, 186, 0, 188, 0, 187, 0, 189, 0, 191, 0, 190, 0 ),
"blend_shape_data": [  ],
"format": 97559,
"index_count": 276,
"material": SubResource( 2 ),
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 192
}

[sub_resource type="ConvexPolygonShape" id=4]
points = PoolVector3Array( -1.66198, 16.816, 2.20602, -1.66198, 19.9058, -0.702869, -1.5628, 22.8089, -0.515517, -1.55043, 17.0267, 5.2672, -1.55043, 22.7855, 5.2672, 1.3852, 22.9053, -0.61196, 1.42797, 19.9058, -0.702869, 1.60988, 16.816, 2.20602, 1.60988, 16.816, 5.47792, 1.60988, 19.9058, 1.2973, 1.60988, 22.9962, 5.47792 )

[sub_resource type="ConvexPolygonShape" id=5]
points = PoolVector3Array( -1.6136, 17.0911, -1.66179, -1.6136, 22.9017, -1.66179, -1.55438, 17.2061, -4.5953, -1.55438, 22.7867, -4.5953, 1.32048, 17.2061, -4.5953, 1.32048, 22.7867, -4.5953, 1.38157, 22.9053, -1.65993, 1.382, 17.0867, -1.6595 )

[sub_resource type="ConvexPolygonShape" id=6]
points = PoolVector3Array( -1.6623, 12.6333, -1.6114, -1.60014, 12.7064, -4.4975, -1.60014, 16.1963, -4.4975, -1.5882, 13.2403, 5.23288, -1.5882, 16.1822, 5.23288, 1.37632, 13.2221, 5.3054, 1.37632, 16.2081, 5.3054, 1.38752, 16.2213, -4.56756, 1.39505, 12.6725, -4.59236, 1.4284, 12.6333, -1.6114 )

[sub_resource type="ConvexPolygonShape" id=7]
points = PoolVector3Array( -1.8441, 3.18019, -1.4307, -1.8441, 3.18019, 5.29611, -1.7532, 0.284856, -1.25367, -1.7532, 0.284856, 5.11909, -1.66219, 7.54273, 5.29611, -1.4993, 7.14985, -0.587825, 1.21313, 0.1796, -1.34866, 1.21313, 0.1796, 5.21408, 1.24638, 3.18019, -1.4307, 1.4835, 7.26931, -0.67814, 1.4835, 7.26931, 5.04937, 1.6102, 4.26882, -0.884834, 1.6102, 4.26882, 5.29611 )

[sub_resource type="ConvexPolygonShape" id=8]
points = PoolVector3Array( -1.84378, 3.17941, -4.885, -1.84378, 3.17941, -1.4307, -1.7532, 0.435998, -4.78937, -1.7532, 0.435998, -1.52633, -1.60074, 12.3696, -4.63813, -1.58651, 12.3082, -1.6927, 1.16964, 0.418818, -4.7941, 1.22509, 0.1796, -1.45573, 1.24617, 3.17941, -4.885, 1.24617, 3.17941, -1.4307, 1.34329, 4.20822, -1.6927, 1.34329, 12.3082, -1.6927, 1.39471, 4.13684, -4.67158, 1.39471, 12.5054, -4.67158 )

[node name="pd_rune_key" type="RigidBody"]

[node name="pd_rune_key" type="MeshInstance" parent="."]
transform = Transform( 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0 )
mesh = SubResource( 3 )
material/0 = null

[node name="CollisionShape5" type="CollisionShape" parent="."]
transform = Transform( 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0 )
shape = SubResource( 4 )

[node name="CollisionShape4" type="CollisionShape" parent="."]
transform = Transform( 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0 )
shape = SubResource( 5 )

[node name="CollisionShape3" type="CollisionShape" parent="."]
transform = Transform( 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0 )
shape = SubResource( 6 )

[node name="CollisionShape2" type="CollisionShape" parent="."]
transform = Transform( 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0 )
shape = SubResource( 7 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0 )
shape = SubResource( 8 )
